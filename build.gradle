buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE')
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext.springBootVersion = '2.0.5.RELEASE'
ext.springfoxSwaggerVersion = '2.9.2'
ext.gsonVersion = '2.8.2'
ext.hibernateVersion = '6.0.16.Final'
ext.glassfishVersion = '3.0.1-b09'

bootJar {
  baseName = 'geckox-myfinances'
    version =  '0.0.1'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
  all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'junit'
  }
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
  compile("org.springframework.boot:spring-boot-starter-log4j2")
  compile("com.google.code.gson:gson:${gsonVersion}")
  compile("org.hibernate.validator:hibernate-validator-cdi:${hibernateVersion}")
  compile("org.glassfish:javax.el:${glassfishVersion}")
  compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
  compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")

  // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.postgresql:postgresql")
  compile("org.flywaydb:flyway-core")

  developmentOnly("org.springframework.boot:spring-boot-devtools")

  compileOnly("org.projectlombok:lombok")

  annotationProcessor("org.projectlombok:lombok")

  testCompile("org.springframework.boot:spring-boot-starter-test")

  testImplementation("org.junit.jupiter:junit-jupiter:5.4.2")
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}
